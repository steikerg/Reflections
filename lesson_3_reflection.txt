When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository is helpful if more than one programmer is working on a 
    project. It is also allows you to work on a project from different locations
    or different computers.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    A git pull will alter the working files as well as updating your local
    repository. This may result in losing work that you have done but not
    yet comitted.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a copy of a remote repository that resides on the remote
    repository and is connected to the original remote. A clone is a copy of 
    a repository that can reside anywhere, on the local machine, another 
    machine or the remote repository. A branch is an alternative series 
    of commits within a single repository.

    Forks allow programmers without update privileges to work on a
    project. In such cases changes and additions may be committed to the
    fork without disturbing the original project and the owner of the 
    project retains control over which elements are introduced in the
    original master.

    A clone can also be used by programmers other than the owner of 
    the original project. However, the clone is totally unrelated to
    the original, which makes it more cumbersome to coordinate 
    changes added to the copy and the original. One good use of a clone
    might be using the original code as a base to start a different
    but similar application.

    A branch may be used to try out code or experiment with a new and 
    untested idea without disturbing the original code. The branch
    code may be eventually be combined with the master using the merge 
    technique or the branch code simply be abandoned without the need
    to remove any changes from the master code. 
     
    Alternatively, the branch technique might be used to create a
    variation of the master project intended to be separate, such as 
    an enhanced version of an application or version in a different
    language. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
