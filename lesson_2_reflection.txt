What happens when you initialize a repository? Why do you need to do it?

	Create a new repository using Git Bash. First navigate to the 
	directory where the subject files are located. Next run "git init". 
	This initializes a blank or empty repository but creating 
	the appropriate files in a hidden directory under the subject 
	directory.

	Need to do this in order to track your files with version control.

How is the staging area different from the working directory and the 
   repository? What value do you think it offers?

	The staging area related to the git repository, which makes it 
	different from the working directory, which is independent of git.

	The staging area is only a preliminary part of git, however. It holds 
	the file before any commits have been made. This allows us to combine
	several related files together within git.

	This change is for testing a commit.

How can you use the staging area to make sure you have one commit per logical
   change?

	The staging area allows us to control which files are included in 
	each commit. For example, if several files have been changed, they 
	be committed separately by using the staging area.

What are some situations when branches would be helpful in keeping your 
   history organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it 
   in the diagram the way we do?

What are the pros and cons of Git’s automatic merging vs. always doing 
  merges manually?
